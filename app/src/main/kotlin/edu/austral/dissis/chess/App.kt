/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package edu.austral.dissis.chess

import edu.austral.dissis.chess.adapter.ChessEngineAdapter
import edu.austral.dissis.chess.factory.piece.ClassicPieceFactory
import edu.austral.dissis.chess.factory.rule.ClassicRuleFactory
import edu.austral.dissis.chess.gui.CachedImageResolver
import edu.austral.dissis.chess.gui.DefaultImageResolver
import edu.austral.dissis.chess.gui.GameView
import edu.austral.dissis.chess.rule.game.CheckRule
import edu.austral.dissis.chess.rule.game.CheckmateRule
import edu.austral.dissis.common.game.Game
import javafx.application.Application
import javafx.application.Application.launch
import javafx.scene.Scene
import javafx.stage.Stage
import edu.austral.dissis.common.piece.Color
import edu.austral.dissis.chess.rule.game.FriendlyFireRule
import edu.austral.dissis.chess.rule.game.NotYourTurnRule
import edu.austral.dissis.chess.start.ClassicStartingBoard


fun main() {
    launch(ChessGameApplication::class.java)
}

class ChessGameApplication : Application() {
    private val globalRules = listOf(
        FriendlyFireRule(),
        NotYourTurnRule(),
        CheckRule()
    )
    private val gameEngine = ChessEngineAdapter(
        Game(
            ClassicStartingBoard(ClassicPieceFactory(ClassicRuleFactory())).generate(),
            globalRules,
            Color.WHITE,
            CheckmateRule(globalRules),
        )
    )
    private val imageResolver = CachedImageResolver(DefaultImageResolver())

    companion object {
        const val GameTitle = "Chess"
    }

    override fun start(primaryStage: Stage) {
        primaryStage.title = GameTitle

        val root = GameView(gameEngine, imageResolver)
        primaryStage.scene = Scene(root)

        primaryStage.show()
    }
}
